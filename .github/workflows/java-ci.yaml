name: Java Organization CI

on:
  workflow_call:
    inputs:
      app_dir:
        description: Set application path to build, leave empty if not needed
        type: string
        default: ./
      use_code_artifact:
        description: Set usage of packages from Code Artifact
        type: boolean
        default: false
      use_graal_vm:
        description: Use GraalVM to Build image
        type: boolean
        default: false
      aws-region:
        description: Which AWS region to use
        type: string
        default: us-east-1

    # secrets:  # Defines the secrets that can be passed from the caller workflow
    #   envPAT:  # Name of the secret
    #     required: true  # Specifies that this secret is mandatory

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone git repository
        uses: actions/checkout@v4.1.6

      - name: Setup Java Version
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          # java-version: '${{ inputs.java_version }}'
          java-version-file: ./${{ inputs.app_dir }}/.tool-versions
      
      - name: Get Gradle version
        id: get_gradle_version
        run: cd ./${{ inputs.app_dir }} && echo "GRADLE_VERSION=$(cat .tool-versions | grep gradle | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3.3.2
        with:
          gradle-version: ${{ steps.get_gradle_version.outputs.GRADLE_VERSION }}

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}

      - name: Run tests
        run: cd ./${{ inputs.app_dir }} && gradle --no-daemon test
        env:
          USE_CODE_ARTIFACT: ${{ inputs.use_code_artifact }}
          AWS_DEFAULT_REGION: ${{ inputs.aws-region }}

      - name: Run build with Gradle
        if: ${{ !inputs.use_graal_vm }}
        run: cd ./${{ inputs.app_dir }} && gradle --no-daemon clean build -x test
        env:
          USE_CODE_ARTIFACT: ${{ inputs.use_code_artifact }}

      - name: Run build with Gradle and GraalVM
        if: ${{ inputs.use_graal_vm }}
        run: cd ./${{ inputs.app_dir }} && gradle --no-daemon --refresh-dependencies clean bootBuildImage -x test
        env:
          USE_CODE_ARTIFACT: ${{ inputs.use_code_artifact }}